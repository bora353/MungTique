cors:
  allowed-origins: ${CORS_ALLOWED_ORIGINS}

spring:
  datasource:
    driver-class-name: org.postgresql.Driver
    url: jdbc:postgresql://${USER_DB_URL}:5432/postgres
    username: ${PG_ID}
    password: ${PG_PW}

  jpa:
    hibernate:
      ddl-auto: update
    show-sql: true

  sql:
    init:
      mode: never

  jwt:
    secret: ${TOKEN_SECRET}
    access-expiration: ${ACCESS_EXPIRATION_TIME}
    refresh-expiration: ${REFRESH_EXPIRATION_TIME}

  kafka:
    bootstrap-servers: ${KAFKA_URI}
    consumer:
      group-id: ${KAFKA_GROUP_ID}

  data:
    redis:
      host: ${REDIS_IP}
      port: ${REDIS_PORT}

  mail:
    host: ${MAIL_HOST}
    port: ${MAIL_PORT}
    username: ${MAIL_USERNAME}
    password: ${MAIL_PASSWORD}

  security:
    oauth2:
      client:
        registration:
          naver:
            client-id: ${NAVER_CLIENT_ID}
            client-secret: ${NAVER_CLIENT_SECRET}
            redirect-uri: ${NAVER_REDIRECT_URI}
          kakao:
            client-id: ${KAKAO_CLIENT_ID}
            client-secret: ${KAKAO_CLIENT_SECRET}
            redirect-uri: ${KAKAO_REDIRECT_URI}
            authorization-grant-type: authorization_code
        provider:
          naver:
            authorization-uri: ${NAVER_AUTHORIZATION_URI}
            token-uri: ${NAVER_TOKEN_URI}
            user-info-uri: ${NAVER_USER_INFO_URI}
          kakao:
            authorization-uri: ${KAKAO_AUTHORIZATION_URI}
            token-uri: ${KAKAO_TOKEN_URI}
            user-info-uri: ${KAKAO_USER_INFO_URI}

management:
  zipkin:
    tracing:
      endpoint: ${ZIPKIN_SERVER_URL}