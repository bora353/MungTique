apiVersion: apps/v1
kind: Deployment
metadata:
  name: payment-deploy
spec:
  selector:
    matchLabels:
      app: payment-service
  replicas: 1
  template:
    metadata:
      labels:
        app: payment-service
    spec:
      containers:
        - name: payment-service
          image: gaeun0811/payment-service:${MUNGTIQUE_VERSION}
          imagePullPolicy: Always
          ports:
            - containerPort: 8086
              protocol: TCP
          resources:
            requests:
              cpu: 500m
              memory: 1000Mi
          env:
            - name: SPRING_PROFILES_ACTIVE
              valueFrom:
                configMapKeyRef:
                  name: k8s-configmap
                  key: SPRING_PROFILES_ACTIVE
            - name: DB_URL
              valueFrom:
                configMapKeyRef:
                  name: k8s-configmap
                  key: PAYMENT_DB_URL
            - name: KAFKA_URI
              valueFrom:
                configMapKeyRef:
                  name: k8s-configmap
                  key: KAFKA_URI
            - name: KAFKA_GROUP_ID
              valueFrom:
                configMapKeyRef:
                  name: k8s-configmap
                  key: KAFKA_GROUP_ID
            - name: EUREKA_SERVER_URL
              valueFrom:
                configMapKeyRef:
                  name: k8s-configmap
                  key: EUREKA_SERVER_URL
            - name: REDIS_IP
              valueFrom:
                configMapKeyRef:
                  name: k8s-configmap
                  key: REDIS_IP
            - name: REDIS_PORT
              valueFrom:
                configMapKeyRef:
                  name: k8s-configmap
                  key: REDIS_PORT
            - name: ZIPKIN_SERVER_URL
              valueFrom:
                configMapKeyRef:
                  name: k8s-configmap
                  key: ZIPKIN_SERVER_URL
            # üîí Secret Í∞í Ï†ÅÏö©
            - name: PG_ID
              valueFrom:
                secretKeyRef:
                  name: k8s-secret
                  key: PG_ID
            - name: PG_PW
              valueFrom:
                secretKeyRef:
                  name: k8s-secret
                  key: PG_PW
          volumeMounts:
            - name: logs
              mountPath: /logs
      volumes:
        - name: logs
          persistentVolumeClaim:
            claimName: payment-logs-pvc
---
apiVersion: v1
kind: Service
metadata:
  name: payment-service
spec:
  type: NodePort
  selector:
    app: payment-service
  ports:
    - protocol: TCP
      port: 8086
      targetPort: 8086
      nodePort: 30006
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: payment-db
spec:
  replicas: 1
  selector:
    matchLabels:
      app: payment-db
  template:
    metadata:
      labels:
        app: payment-db
    spec:
      containers:
        - name: payment-db
          image: postgres:latest
          env:
            - name: POSTGRES_USER
              valueFrom:
                secretKeyRef:
                  name: k8s-secret
                  key: PG_ID
            - name: POSTGRES_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: k8s-secret
                  key: PG_PW
          volumeMounts:
            - name: db-init
              mountPath: /docker-entrypoint-initdb.d
            - name: db-data
              mountPath: /var/lib/postgresql/data
      volumes:
        - name: db-init
          persistentVolumeClaim:
            claimName: payment-db-init-pvc
        - name: db-data
          persistentVolumeClaim:
            claimName: payment-db-data-pvc
---
apiVersion: v1

kind: Service
metadata:
  name: payment-db
spec:
  type: NodePort
  selector:
    app: payment-db
  ports:
    - protocol: TCP
      port: 5432
      targetPort: 5432
      nodePort: 31006
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: payment-logs-pvc
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 256Mi
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: payment-db-init-pvc
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 256Mi
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: payment-db-data-pvc
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 256Mi