plugins {
    id 'java'
    id 'org.springframework.boot' version '3.2.4'
    id 'io.spring.dependency-management' version '1.1.4'
}

bootJar { enabled = false }
jar { enabled = false }

allprojects {
    repositories {
        mavenCentral()
    }
}

subprojects {
    group = 'com.mung'
    version = '0.0.1-SNAPSHOT'

    apply plugin: "java"
    apply plugin: "org.springframework.boot"
    apply plugin: "io.spring.dependency-management"

    java { sourceCompatibility = '17' }
    bootJar { enabled = true }
    jar { enabled = false }
    ext { set('springCloudVersion', "2023.0.0")}

    dependencyManagement {
        imports {
            mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
        }
    }

    configurations {
        compileOnly {
            extendsFrom annotationProcessor
        }
        configureEach {
            exclude group: 'org.springframework.boot', module: 'spring-boot-starter-logging'
            exclude group: 'ch.qos.logback', module: 'logback-classic'
        }
    }

    dependencies {
        compileOnly 'org.projectlombok:lombok'
        annotationProcessor 'org.projectlombok:lombok'
        developmentOnly 'org.springframework.boot:spring-boot-devtools'
        testImplementation('org.springframework.boot:spring-boot-starter-test') {
            exclude group: 'org.springframework.boot', module: 'spring-boot-starter-logging'
            exclude group: 'ch.qos.logback', module: 'logback-classic'
        }

        // mapstruct
        implementation 'org.mapstruct:mapstruct:1.5.3.Final'
        annotationProcessor 'org.mapstruct:mapstruct-processor:1.5.3.Final'
        // log
        implementation 'org.springframework.boot:spring-boot-starter-log4j2'
        testImplementation 'org.springframework.boot:spring-boot-starter-log4j2'
        implementation group: 'com.fasterxml.jackson.dataformat', name: 'jackson-dataformat-yaml', version: '2.16.0'
        // test
        testImplementation platform('org.junit:junit-bom:5.9.1')
        testImplementation 'org.junit.jupiter:junit-jupiter'
        testImplementation 'org.mockito:mockito-core:3.+'
        testImplementation 'org.assertj:assertj-core:3.23.1'
        // actuator
        implementation 'org.springframework.boot:spring-boot-starter-actuator'
        // postgres
        implementation 'org.postgresql:postgresql'
        // eureka
        implementation 'org.springframework.cloud:spring-cloud-starter-netflix-eureka-client'

        // prometheus
        implementation 'io.micrometer:micrometer-registry-prometheus'
        //Swagger
        implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.3.0'
        // h2
        implementation 'com.h2database:h2'
        // zipkin, Micrometer, prometheus
        implementation 'io.micrometer:micrometer-observation'
        implementation 'io.micrometer:micrometer-tracing-bridge-brave'
        implementation 'io.github.openfeign:feign-micrometer'
        implementation 'io.zipkin.reporter2:zipkin-reporter-brave'
        implementation 'io.micrometer:micrometer-registry-prometheus'
//        implementation 'io.github.openfeign:feign-okhttp:13.3'
    }

    tasks.named('test') {
        useJUnitPlatform()
    }
}